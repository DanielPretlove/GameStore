@page "/game"
@using GameStore.Web.Shared.Models.SummaryModels;

@inject HttpClient http
@inject NavigationManager UriHelper



@if(gameSummaryModel.Count == 0)
{
    <MudText Typo="Typo.h4">There are no entries, please create a valid entry</MudText>
}
else
{
    <MudTable Items="@gameSummaryModel" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>ReleaseDate</MudTh>
            <MudTh>View</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Description">@context.Description</MudTd>
            <MudTd DataLabel="ReleaseDate">@context.ReleaseDate</MudTd>
            <MudIcon Icon="@Icons.Filled.RemoveRedEye" @onclick="() => ViewCurrentGame(context.Id)" Title="View" Style="cursor: pointer;" />
        </RowTemplate>
    </MudTable>
}



<br />

<MudButton Variant="Variant.Filled" StartIcon="@Icons.Filled.Create" Color="Color.Info" OnClick="@(() => CreateNewGame())">Create New Entry</MudButton>

@code {
    private IList<GameSummaryModel> gameSummaryModel = Array.Empty<GameSummaryModel>();
    protected override async Task OnInitializedAsync()
    {
        gameSummaryModel = await GetGameSummary();
    }



    public async Task<IList<GameSummaryModel>> GetGameSummary()
    {
        return await http.GetFromJsonAsync<IList<GameSummaryModel>>("/api/Game/list");
    }

    public async Task<string> ViewCurrentGame(Guid id)
    {
        var response = await http.GetFromJsonAsync<GameSummaryModel>($"/api/Game/{id}");
        UriHelper.NavigateTo($"/game/{id}");
        return response.Name;
    }

    public void CreateNewGame()
    {
        UriHelper.NavigateTo("game/create");
    }
}